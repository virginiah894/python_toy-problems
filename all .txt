Write a program that asks the user how many Fibonacci numbers to generate and then generates them. Take this opportunity to think about how you can use functions. Make sure to ask the user to enter the number of numbers in the sequence to generate.(Hint: The Fibonacci sequence is a sequence of numbers where the next number in the sequence is the sum of the previous two numbers in the sequence. The sequence looks like this: 1, 1, 2, 3, 5, 8, 13, …)
Write a function that picks a random word from a list of words from the SOWPODS dictionary. Download this file and save it in the same directory as your Python code. This file is Peter Norvig’s compilation of the dictionary of words used in professional Scrabble tournaments. Each line in the file contains a single word.
Write a program (using functions!) that asks the user for a long string containing multiple words. Print back to the user the same string, except with the words in backwards order.
     For example, say I type the string:
          My name is Michele
     Then I would see the string:
          Michele is name My
     shown back to me.
4.  Generate a random number between 1 and 9 (including 1 and 9). Ask the user to guess the number, then tell them whether they guessed too low, too high, or exactly right. Keep the game going until the user types “exit”. Keep track of how many guesses the user has taken, and when the game ends, print this out.
5.  Take two lists, say for example these two:
  a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
  b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
and write a program that returns a list that contains only the elements that are common between the lists (without duplicates). Make sure your program works on two lists of different sizes.
6.  Write a function that takes in an integer and generates all the prime numbers between 0 and the input integer. Then write another function that asks the user for a number and determine whether the number is prime or not.
7. Write a password generator in Python. Be creative with how you generate passwords - strong passwords have a mix of lowercase letters, uppercase letters, numbers, and symbols. The passwords should be random, generating a new password every time the user asks for a new password. Include your run-time code in a main method.
Bonus point:
Ask the user how strong they want their password to be. For weak passwords, pick a word or two from a list.
8.  Write a program (function!) that takes a list and returns a new list that contains all the elements of the first list minus all the duplicates.
Bonus point:
Write two different functions to do this - one using a loop and constructing a list, and another using sets.
9.  Create a program that asks the user to enter their name and their age. Print out a message addressed to them that tells them the year that they will turn 100 years old.
10.  Ask the user for a string and print out whether this string is a palindrome or not. (A palindrome is a string that reads the same forwards and backwards.)
WikipediaWikipedia
Peter Norvig
Peter Norvig (born December 14, 1956) is an American computer scientist.  He is a director of research at Google, LLC, and used to be its director of search quality. (130 kB)
